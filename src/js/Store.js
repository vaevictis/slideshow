// imageKeys is an array of the object keys generated by Parcel's import of the images folder
// images is a data structure containining, for each imageKey, a file path to be injected in the DOM,
// and a view counter to keep track of the number of times each image is being displayed

export default class Store {
  constructor (imagesFolder) {
    const images = {}
    let imageKeys = []

    if (imagesFolder?.images) {
      imageKeys = Object.keys(imagesFolder.images)

      for (const [key, value] of Object.entries(imagesFolder.images)) {
        images[key] = {
          path: value,
          viewCounter: 0
        }
      }
    }

    this.imageKeys = imageKeys
    this.images = images
    this.slideshowTimerId = null
    this.currentImgIdx = 0
  }

  increaseViewCounterForCurrentImg () {
    this.images[this.imageKeys[this.currentImgIdx]].viewCounter++
  }

  getCurrentImgIdx () {
    return this.currentImgIdx
  }

  getCurrentImgPath () {
    return this.currentImg().path
  }

  getCurrentImgViewCounter () {
    return this.currentImg().viewCounter
  }

  setSlideshowTimerId (timerId) {
    this.slideshowTimerId = timerId
  }

  getSlideshowTimerId () {
    return this.slideshowTimerId
  }

  shiftToNextImg () {
    if (this.currentImgIdx === this.imageKeys.length - 1) {
      this.currentImgIdx = 0
    } else {
      this.currentImgIdx++
    }

    this.currentImg().viewCounter++
  }

  shiftToPreviousImg () {
    if (this.currentImgIdx === 0) {
      this.currentImgIdx = this.imageKeys.length - 1
    } else {
      this.currentImgIdx--
    }

    this.currentImg().viewCounter++
  }

  // Private, at least conceptually, as it is not a thing in JS
  currentImg () {
    return this.images[this.imageKeys[this.currentImgIdx]]
  }
}
